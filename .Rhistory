panel.grid.major.y = element_blank(),
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(aqua, coral))
ggplot(
all %>%
filter(pillar == "Pillar 1") %>%
filter(orf != "NA") %>%
filter(lineage %in% c("B.1.177", "B.1.1.7")) %>%
filter(is.na(sgRNA_HQ_LQ_ect) ==
F),
aes(lineage, sgRNA_HQ_LQ_ect, color = lineage)
) +
# geom_quasirandom(varwidth = TRUE,alpha=0.1)+
geom_violin() +
geom_beeswarm(size = 2, alpha = 0.1) +
geom_bracket(
data = stat.test,
aes(xmin = group1, xmax = group2),
y.position = log10(900000),
color = "#4D4845"
) +
geom_boxplot(
outlier.shape = NA,
width = 0.2,
color = "grey18",
alpha = 0.5
) +
facet_wrap(~orf, scales = "fixed", ncol = 5) +
scale_y_continuous(
expression(bold(paste(
"sgRNA Reads*ECT (log"["10"], ")"
))),
trans = scales::pseudo_log_trans(base = 10),
breaks = c(0, 10, 100, 1000,10000,10000,100000),
expand = c(0, 0)
# limits = c(0, NA)
) +
coord_cartesian(ylim=c(0,1000000))+
scale_x_discrete("PANGO Lineage") +
ft_theme() +
theme(
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
),
panel.background = element_rect(fill = "grey97", color = "white"),
strip.text.x = element_text(face = "bold", colour = '#4D4845'),
legend.position = "None",
panel.grid.major.y = element_blank(),
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(aqua, coral))
ggplot(
all %>%
filter(pillar == "Pillar 1") %>%
filter(orf != "NA") %>%
filter(lineage %in% c("B.1.177", "B.1.1.7")) %>%
filter(is.na(sgRNA_HQ_LQ_ect) ==
F),
aes(lineage, sgRNA_HQ_LQ_ect, color = lineage)
) +
# geom_quasirandom(varwidth = TRUE,alpha=0.1)+
geom_violin() +
geom_beeswarm(size = 2, alpha = 0.1) +
geom_bracket(
data = stat.test,
aes(xmin = group1, xmax = group2),
y.position = log10(500000),
color = "#4D4845"
) +
geom_boxplot(
outlier.shape = NA,
width = 0.2,
color = "grey18",
alpha = 0.5
) +
facet_wrap(~orf, scales = "fixed", ncol = 5) +
scale_y_continuous(
expression(bold(paste(
"sgRNA Reads*ECT (log"["10"], ")"
))),
trans = scales::pseudo_log_trans(base = 10),
breaks = c(0, 10, 100, 1000,10000,10000,100000),
expand = c(0, 0)
# limits = c(0, NA)
) +
coord_cartesian(ylim=c(0,1000000))+
scale_x_discrete("PANGO Lineage") +
ft_theme() +
theme(
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
),
panel.background = element_rect(fill = "grey97", color = "white"),
strip.text.x = element_text(face = "bold", colour = '#4D4845'),
legend.position = "None",
panel.grid.major.y = element_blank(),
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(aqua, coral))
ggplot(
all %>%
filter(pillar == "Pillar 1") %>%
filter(orf != "NA") %>%
filter(lineage %in% c("B.1.177", "B.1.1.7")) %>%
filter(is.na(sgRNA_HQ_LQ_ect) ==
F),
aes(lineage, sgRNA_HQ_LQ_ect, color = lineage)
) +
# geom_quasirandom(varwidth = TRUE,alpha=0.1)+
geom_violin() +
geom_beeswarm(size = 2, alpha = 0.1) +
geom_bracket(
data = stat.test,
aes(xmin = group1, xmax = group2),
y.position = log10(200000),
color = "#4D4845"
) +
geom_boxplot(
outlier.shape = NA,
width = 0.2,
color = "grey18",
alpha = 0.5
) +
facet_wrap(~orf, scales = "fixed", ncol = 5) +
scale_y_continuous(
expression(bold(paste(
"sgRNA Reads*ECT (log"["10"], ")"
))),
trans = scales::pseudo_log_trans(base = 10),
breaks = c(0, 10, 100, 1000,10000,10000,100000),
expand = c(0, 0)
# limits = c(0, NA)
) +
coord_cartesian(ylim=c(0,1000000))+
scale_x_discrete("PANGO Lineage") +
ft_theme() +
theme(
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
),
panel.background = element_rect(fill = "grey97", color = "white"),
strip.text.x = element_text(face = "bold", colour = '#4D4845'),
legend.position = "None",
panel.grid.major.y = element_blank(),
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(aqua, coral))
f = ggplot(
all %>%
filter(pillar == "Pillar 1") %>%
filter(orf != "NA") %>%
filter(lineage %in% c("B.1.177", "B.1.1.7")) %>%
filter(is.na(sgRNA_HQ_LQ_ect) ==
F),
aes(lineage, sgRNA_HQ_LQ_ect, color = lineage)
) +
# geom_quasirandom(varwidth = TRUE,alpha=0.1)+
geom_violin() +
geom_beeswarm(size = 2, alpha = 0.1) +
geom_bracket(
data = stat.test,
aes(xmin = group1, xmax = group2),
y.position = log10(200000),
color = "#4D4845"
) +
geom_boxplot(
outlier.shape = NA,
width = 0.2,
color = "grey18",
alpha = 0.5
) +
facet_wrap(~orf, scales = "fixed", ncol = 5) +
scale_y_continuous(
expression(bold(paste(
"sgRNA Reads*ECT (log"["10"], ")"
))),
trans = scales::pseudo_log_trans(base = 10),
breaks = c(0, 10, 100, 1000,10000,10000,100000),
expand = c(0, 0)
# limits = c(0, NA)
) +
coord_cartesian(ylim=c(0,1000000))+
scale_x_discrete("PANGO Lineage") +
ft_theme() +
theme(
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
),
panel.background = element_rect(fill = "grey97", color = "white"),
strip.text.x = element_text(face = "bold", colour = '#4D4845'),
legend.position = "None",
panel.grid.major.y = element_blank(),
plot.margin = margin(1, 0.5, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(aqua, coral))
top = ggarrange(a, b, labels = c("A", "B"), widths = c(1, 0.25))
middle_right = ggarrange(
ect,
rlu,
labels = c("E", "F"),
heights = c(0.5, 0.5),
nrow = 2
)
middle = ggarrange(
c,
d,
middle_right,
labels = c("C", "D", ""),
widths = c(0.5, 0.5, 0.3),
nrow = 1
)
bottom_left = ggarrange(e, e2, labels = c("G", "H"), nrow = 2)
bottom = ggarrange(
bottom_left,
f,
labels = c("", "I"),
nrow = 1,
widths = c(1, 0.7)
)
ggarrange(top,
middle,
bottom,
nrow = 3,
heights = c(0.8, 1, 1))
#========================================================================================================================
# For once, lets prepare all of our data up front, all of our summaries to make plotting easier
#========================================================================================================================
setwd('/home/md1mpar/Documents/projects/periscope/elephants/nature_medicine_manuscript/supplementary_data_files')
pillar1_canonical_counts = read.table("supplementary_file_2_pillar_1_canonical_counts.csv", header = T, sep = ",")
pillar2_canonical_counts = read.table("supplementary_file_3_pillar_2_canonical_counts.csv", header = T, sep = ",")
brazil_counts = read.table("supplementary_file_X_brazil_counts.csv", header = T, sep = ",")
nrow(pillar1_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
nrow(pillar2_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
pillar1_canonical_counts = pillar1_canonical_counts %>%
filter(mapped_reads >= 50000) %>%
filter(orf != "ORF1a")
pillar2_canonical_counts = pillar2_canonical_counts %>%
filter(mapped_reads >= 50000) %>%
filter(orf != "ORF1a")
nrow(pillar1_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
nrow(pillar2_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
pillar1_canonical_counts$pillar = "Pillar 1"
pillar2_canonical_counts$pillar = "Pillar 2"
metadata_pillar1 = read.table("supplementary_file_1_metadata.csv", header = T, sep = ",")
metadata_pillar2 = read.table("supplementary_table_5_pillar_2_metadata.csv", header = T, sep = ",")
metadata_brazil = read.table("brazil_lineage.csv",header=T,sep=",")
#========================================================================================================================
# For once, lets prepare all of our data up front, all of our summaries to make plotting easier
#========================================================================================================================
setwd('/home/md1mpar/Documents/projects/periscope/elephants/nature_medicine_manuscript/supplementary_data_files')
pillar1_canonical_counts = read.table("supplementary_file_2_pillar_1_canonical_counts.csv", header = T, sep = ",")
pillar2_canonical_counts = read.table("supplementary_file_3_pillar_2_canonical_counts.csv", header = T, sep = ",")
brazil_counts = read.table("supplementary_file_X_brazil_counts.csv", header = T, sep = ",")
nrow(pillar1_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
nrow(pillar2_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
pillar1_canonical_counts = pillar1_canonical_counts %>%
filter(mapped_reads >= 50000) %>%
filter(orf != "ORF1a")
pillar2_canonical_counts = pillar2_canonical_counts %>%
filter(mapped_reads >= 50000) %>%
filter(orf != "ORF1a")
nrow(pillar1_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
nrow(pillar2_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
pillar1_canonical_counts$pillar = "Pillar 1"
pillar2_canonical_counts$pillar = "Pillar 2"
metadata_pillar1 = read.table("supplementary_file_1_metadata.csv", header = T, sep = ",")
metadata_pillar2 = read.table("supplementary_table_5_pillar_2_metadata.csv", header = T, sep = ",")
metadata_brazil = read.table("brazil_lineages.csv",header=T,sep=",")
brazil=plyr::join(brazil_counts,metadata_brazil,by="sample")
clinical = read.table("supplementary_file_4_clnical_data.csv", header = T, sep = ",")
clinical$days_since_symptom_onset = as.Date(clinical$DiagnosisDTC, format = "%d/%m/%Y") - as.Date(clinical$DateOfOnset, format = "%d/%m/%Y")
# all = merge(metadata,clinical,by.x="sample",by.y="external_id")
pillar1 = merge(metadata_pillar1, pillar1_canonical_counts)
pillar2 = merge(metadata_pillar2, pillar2_canonical_counts)
all = rbind(pillar1, pillar2)
all$sgRNA_HQ_LQ_ect = (all$sgRNA_HQ_count + all$sgRNA_LQ_count) * as.numeric(as.character(all$ect))
total = all %>%
group_by(sample, age, gender, collection_date, week, year, lineage, HOCI, HCW, protocol, mapped_reads, ect, rct, rlu) %>%
dplyr::summarise(total = sum(as.numeric(sgRPTg_HQ) + as.numeric(sgRPTg_LQ)), total_g = sum(gRNA_count), total_raw_sgRNA = sum(sgRNA_HQ_count + sgRNA_LQ_count))
brazil$total=brazil$sgRPTg_HQ+brazil$sgRPTg_LQ+brazil$sgRNA_LLQ_count
brazil=brazil %>%filter(orf!="ORF1a") %>% filter(is.na(Lineage_final) == F)
brazil$total=brazil$sgRPTg_HQ+brazil$sgRPTg_LQ+brazil$sgRNA_LLQ_count
brazil=brazil %>%filter(orf!="ORF1a") %>% filter(is.na(lineage) == F)
ggplot(brazil, aes(lineage, total, color = lineage)) +
# geom_quasirandom(varwidth = TRUE,alpha=0.1)+
geom_violin() +
geom_beeswarm(size = 2, alpha = 0.1) +
labs(subtitle = "Pillar 2") +
geom_boxplot(
outlier.shape = NA,
width = 0.2,
color = "grey18",
alpha = 0.5
) +
# geom_bracket(
#   data = stat.test,
#   aes(xmin = group1, xmax = group2),
#   y.position = log10(60000),
#   color = "#4D4845"
# ) +
facet_wrap(~orf, scales = "fixed", ncol = 5) +
scale_y_continuous(
expression(bold(
paste("sgRNA Reads/1000 Genomic (log"["10"], ")")
)),
trans = scales::pseudo_log_trans(base = 10),
breaks = c(0, 10, 100, 1000, 10000),
expand = c(0, 0),
limits = c(0, 150000)
) +
scale_x_discrete("PANGO Lineage") +
ft_theme() +
theme(
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
),
panel.background = element_rect(fill = "grey97", color = "white"),
strip.text.x = element_text(face = "bold", colour = '#4D4845'),
legend.position = "None",
panel.grid.major.y = element_blank(),
plot.margin = margin(0.5, 1, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(yellow, green))
brazil$total=brazil$sgRPTg_HQ+brazil$sgRPTg_LQ+brazil$sgRNA_LLQ_count
brazil=brazil %>%filter(orf!="ORF1a") %>% filter(is.na(lineage) == F)
brazil$class=ifelse(brazil$lineage == "P.1","P.1","Other")
brazil$class=ifelse(brazil$lineage == "B.1.1.28","B.1.1.28",brazil$class)
brazil$class=ifelse(brazil$lineage == "P.2","P.2",brazil$class)
brazil$class <- factor(brazil$class , levels = c("Other","B.1.1.28","P.1","P.2"))
stat.test <- brazil %>%
)
ggplot(brazil, aes(class, total, color = class)) +
# geom_quasirandom(varwidth = TRUE,alpha=0.1)+
geom_violin() +
geom_beeswarm(size = 2, alpha = 0.1) +
labs(subtitle = "Pillar 2") +
geom_boxplot(
outlier.shape = NA,
width = 0.2,
color = "grey18",
alpha = 0.5
) +
# geom_bracket(
#   data = stat.test,
#   aes(xmin = group1, xmax = group2),
#   y.position = log10(60000),
#   color = "#4D4845"
# ) +
facet_wrap(~orf, scales = "fixed", ncol = 5) +
scale_y_continuous(
expression(bold(
paste("sgRNA Reads/1000 Genomic (log"["10"], ")")
)),
trans = scales::pseudo_log_trans(base = 10),
breaks = c(0, 10, 100, 1000, 10000),
expand = c(0, 0),
limits = c(0, 150000)
) +
scale_x_discrete("PANGO Lineage") +
ft_theme() +
theme(
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
),
panel.background = element_rect(fill = "grey97", color = "white"),
strip.text.x = element_text(face = "bold", colour = '#4D4845'),
legend.position = "None",
panel.grid.major.y = element_blank(),
plot.margin = margin(0.5, 1, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(yellow, green))
ggplot(brazil, aes(class, total, color = class)) +
# geom_quasirandom(varwidth = TRUE,alpha=0.1)+
geom_violin() +
geom_beeswarm(size = 2, alpha = 0.1) +
labs(subtitle = "Pillar 2") +
geom_boxplot(
outlier.shape = NA,
width = 0.2,
color = "grey18",
alpha = 0.5
) +
# geom_bracket(
#   data = stat.test,
#   aes(xmin = group1, xmax = group2),
#   y.position = log10(60000),
#   color = "#4D4845"
# ) +
facet_wrap(~orf, scales = "fixed", ncol = 5) +
scale_y_continuous(
expression(bold(
paste("sgRNA Reads/1000 Genomic (log"["10"], ")")
)),
trans = scales::pseudo_log_trans(base = 10),
breaks = c(0, 10, 100, 1000, 10000),
expand = c(0, 0),
limits = c(0, 150000)
) +
scale_x_discrete("PANGO Lineage") +
ft_theme() +
theme(
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
),
panel.background = element_rect(fill = "grey97", color = "white"),
strip.text.x = element_text(face = "bold", colour = '#4D4845'),
legend.position = "None",
panel.grid.major.y = element_blank(),
plot.margin = margin(0.5, 1, 0.5, 0.5, "cm")
) +
scale_color_manual(values = c(yellow, green, coral,aqua))
require(ggbeeswarm)
popular = c("B", "B.1", "B.1.1", "B.1.177", "B.1.1.7", "P.2")
all$orf <- factor(all$orf, levels = c("S", "E", "M", "N", "ORF6"))
all$lineage <- factor(all$lineage, levels = popular)
setwd('/home/md1mpar/Documents/projects/periscope/elephants/nature_medicine_manuscript/supplementary_data_files')
img1 <- readPNG("images/pillar testing.png")
flow = ggplot() +
background_image(img1) +
# This ensures that the image leaves some space at the edges
theme(plot.margin = margin(t = 0.5, l = 2, r = 2, b = 0.5, unit = "cm"))
popular = c("B", "B.1", "B.1.177")
all$total = all$sgRPTg_HQ + all$sgRPTg_LQ
all %>% group_by(sample,lineage) %>% sumarise()
all %>% group_by(sample,lineage) %>% summarise()
all %>% group_by(sample,lineage) %>% summarise(n=n())
all %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
all %>% filter(pillar == "Pillar 1") %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
#========================================================================================================================
# For once, lets prepare all of our data up front, all of our summaries to make plotting easier
#========================================================================================================================
setwd('/home/md1mpar/Documents/projects/periscope/elephants/nature_medicine_manuscript/supplementary_data_files')
pillar1_canonical_counts = read.table("supplementary_file_2_pillar_1_canonical_counts.csv", header = T, sep = ",")
pillar2_canonical_counts = read.table("supplementary_file_3_pillar_2_canonical_counts.csv", header = T, sep = ",")
brazil_counts = read.table("supplementary_file_X_brazil_counts.csv", header = T, sep = ",")
nrow(pillar1_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
nrow(pillar2_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
pillar1_canonical_counts = pillar1_canonical_counts %>%
filter(mapped_reads >= 50000) %>%
filter(orf != "ORF1a")
pillar2_canonical_counts = pillar2_canonical_counts %>%
filter(mapped_reads >= 50000) %>%
filter(orf != "ORF1a")
nrow(pillar1_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
nrow(pillar2_canonical_counts %>%
group_by(sample) %>%
dplyr::summarise())
pillar1_canonical_counts$pillar = "Pillar 1"
pillar2_canonical_counts$pillar = "Pillar 2"
metadata_pillar1 = read.table("supplementary_file_1_metadata.csv", header = T, sep = ",")
metadata_pillar2 = read.table("supplementary_table_5_pillar_2_metadata.csv", header = T, sep = ",")
metadata_brazil = read.table("brazil_lineages.csv",header=T,sep=",")
brazil=plyr::join(brazil_counts,metadata_brazil,by="sample")
clinical = read.table("supplementary_file_4_clnical_data.csv", header = T, sep = ",")
clinical$days_since_symptom_onset = as.Date(clinical$DiagnosisDTC, format = "%d/%m/%Y") - as.Date(clinical$DateOfOnset, format = "%d/%m/%Y")
# all = merge(metadata,clinical,by.x="sample",by.y="external_id")
pillar1 = merge(metadata_pillar1, pillar1_canonical_counts)
pillar2 = merge(metadata_pillar2, pillar2_canonical_counts)
all = rbind(pillar1, pillar2)
all$sgRNA_HQ_LQ_ect = (all$sgRNA_HQ_count + all$sgRNA_LQ_count) * as.numeric(as.character(all$ect))
total = all %>%
group_by(sample, age, gender, collection_date, week, year, lineage, HOCI, HCW, protocol, mapped_reads, ect, rct, rlu) %>%
dplyr::summarise(total = sum(as.numeric(sgRPTg_HQ) + as.numeric(sgRPTg_LQ)), total_g = sum(gRNA_count), total_raw_sgRNA = sum(sgRNA_HQ_count + sgRNA_LQ_count))
all %>% filter(pillar == "Pillar 1") %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
all %>% filter(pillar == "Pillar 1") %>% filter(lineage %in% popular) %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
all %>% filter(pillar == "Pillar 1") %>% filter(lineage %in% c("B.1.1.7","B.1.177")) %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
all %>% filter(pillar == "Pillar 2") %>% filter(lineage %in% c("B.1.1.7","B.1.177")) %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
all %>% filter(pillar == "Pillar 2") %>% filter(lineage %in% c("B","B.1","B.1.1","B.1.1.7","B.1.177")) %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
all %>% filter(pillar == "Pillar 1") %>% filter(lineage %in% c("B","B.1","B.1.1","B.1.1.7","B.1.177")) %>% group_by(sample,lineage) %>% summarise()%>% group_by(lineage) %>% summarise(n=n())
head(days)
merge(days,pillar1)
merge(days,pillar1) %>% filter(is.na(days)!=F) %>% group_by(sample,lineage) %>% summarise() %>% group_by(lineage) %>% summarise(n=())
merge(days,pillar1) %>% filter(is.na(days)!=F) %>% group_by(sample,lineage) %>% summarise() %>% group_by(lineage) %>% summarise(n=n())
merge(days,pillar1) %>% filter(is.na(Day_of_symptoms)!=F) %>% group_by(sample,lineage) %>% summarise() %>% group_by(lineage) %>% summarise(n=n())
merge(days,pillar1) %>% filter(lineage %in% c("B.1","B.1.1","B.1.1.7","B.1.177")) %>% filter(is.na(Day_of_symptoms)!=F) %>% group_by(sample,lineage) %>% summarise() %>% group_by(lineage) %>% summarise(n=n())
